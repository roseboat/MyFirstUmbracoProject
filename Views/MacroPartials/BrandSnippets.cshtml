@using ContentModels = Umbraco.Web.PublishedModels;
@using Umbraco.Web;
@inherits Umbraco.Web.Macros.PartialViewMacroPage

@{
    var startNodeId = Model.MacroParameters["startNodeId"] != null ? Model.MacroParameters["startNodeId"] : Model.Content.Id;
    var numberOfPosts = 3;
    if (Model.MacroParameters["numberOfPosts"] != null)
    {
        int.TryParse((string)Model.MacroParameters["numberOfPosts"], out numberOfPosts);
    }

}
@if (startNodeId != null)
{
    @* Get the starting page *@
    var startNode = Umbraco.Content(startNodeId);

    if (startNode == null)
    {
        <div class="blogposts">
            <h1>There are no brands in the directory at this time, try again later.</h1>
        </div>

        return;
    }

    //Gets all blogposts to calculate pages
    var brands = startNode.Children.OrderBy(x => x.Name).ToList();
    var pageCount = (int)Math.Ceiling((double)brands.Count / (double)numberOfPosts);
    //gets the page from the querystring and sets it to one if it is out of range
    var page = 1;
    if (!string.IsNullOrEmpty(Request.QueryString["page"]))
    {
        int.TryParse(Request.QueryString["page"], out page);
        if (page <= 0 || page > pageCount)
        {
            page = 1;
        }
    }
    //Gets the brands for the current page
    var pagedBrands = brands.Skip((page - 1) * numberOfPosts).Take(numberOfPosts).ToList();

    if (pagedBrands.Count > 0)
    {
        <div class="blogposts">

            @foreach (ContentModels.Brand brand in pagedBrands)
            {
                <a href="@brand.Url" class="blogpost">
	<div class="brand-card">
    <div class="brand-card__inner" style="background-image: url(https://pentagram-production.imgix.net/d5f938af-8678-42b3-b2ca-afbfbd241477/ps_drjart_05.jpg)">
      <div class="brand-card__inner-content">
      <h2>@brand.Name</h2>
      </div>
         <div class="brand-card__overlay">
<p>blashdlahsidahsodihaosidhoaish eihoiefhso iefhsioefh sighsoidh gosidh isd hfosi</p>
      </div>
    </div>
  </div>
                </a>
            }
        </div>
    }

    if (brands.Count > numberOfPosts)
    {
        <div class="pagination">
            <nav class="nav-bar nav-bar--center">
                @if (page <= 1)
                {
                    <span class="nav-link nav-link--black nav-link--disabled">Prev</span>
                }
                else
                {
                    <a class="nav-link nav-link--black" href="@(Model.Content.Url + "?page=" + (page - 1))">Prev</a>
                }

                @for (int i = 1; i <= pageCount; i++)
                {
                    <a class="nav-link nav-link--black @(page == i ? " nav-link--active" : null)" href="@(Model.Content.Url + "?page=" + i)">@i</a>
                }
                @if (page == pageCount)
                {
                    <span class="nav-link nav-link--black nav-link--disabled">Next</span>
                }
                else
                {
                    <a class="nav-link nav-link--black" href="@(Model.Content.Url + "?page=" + (page + 1))">Next</a>
                }

            </nav>
        </div>
    }
}

